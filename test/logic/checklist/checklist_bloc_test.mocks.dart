// Mocks generated by Mockito 5.4.6 from annotations
// in carcheckmate/test/logic/checklist/checklist_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:carcheckmate/core/services/risk_calculator_service.dart' as _i6;
import 'package:carcheckmate/data/models/checklist_item.dart' as _i7;
import 'package:carcheckmate/domain/entities/car.dart' as _i5;
import 'package:carcheckmate/domain/entities/car_summary.dart' as _i4;
import 'package:carcheckmate/domain/repositories/checklist_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChecklistRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChecklistRepository extends _i1.Mock
    implements _i2.ChecklistRepository {
  MockChecklistRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CarSummary>> getCarSummaries() => (super.noSuchMethod(
        Invocation.method(
          #getCarSummaries,
          [],
        ),
        returnValue: _i3.Future<List<_i4.CarSummary>>.value(<_i4.CarSummary>[]),
      ) as _i3.Future<List<_i4.CarSummary>>);

  @override
  _i3.Future<_i5.Car?> getCarById(String? carId) => (super.noSuchMethod(
        Invocation.method(
          #getCarById,
          [carId],
        ),
        returnValue: _i3.Future<_i5.Car?>.value(),
      ) as _i3.Future<_i5.Car?>);

  @override
  _i3.Future<_i5.Car?> getCarByModelDetails(
    String? brand,
    String? model,
    dynamic year,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCarByModelDetails,
          [
            brand,
            model,
            year,
          ],
        ),
        returnValue: _i3.Future<_i5.Car?>.value(),
      ) as _i3.Future<_i5.Car?>);
}

/// A class which mocks [RiskCalculatorService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRiskCalculatorService extends _i1.Mock
    implements _i6.RiskCalculatorService {
  MockRiskCalculatorService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  double calculateScore({
    required List<_i7.ChecklistItem>? items,
    required Map<String, bool>? selections,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #calculateScore,
          [],
          {
            #items: items,
            #selections: selections,
          },
        ),
        returnValue: 0.0,
      ) as double);
}
